syntax = "proto3";

message RemoteShutterTypes {
    enum AVCaptureDevicePosition {
        UNSPECIFIED = 0;
        BACK = 1;
        FRONT = 2;
    }
    
    enum AVCaptureFlashMode {
        OFF = 0;
        ON = 1;
        AUTO = 2;
    }
}

message RemoteShutterEnvelope {
   enum ContentType {
       UNKNOWN = 0;
       
       TAKE_PIC = 1;
       TAKE_PIC_ACK = 2;
       TAKE_PIC_RESP = 3;
       
       TOGGLE_FLASH = 4;
       TOGGLE_FLASH_RESP = 5;
       
       TOGGLE_CAMERA = 6;
       TOGGLE_CAMERA_RESP = 7;
       
       SEND_FRAME = 8;
       
       PEER_BECAME_CAMERA = 9;
       PEER_BECAME_MONITOR = 10;
   }
    
    ContentType content_type = 1;
    string version = 2;
    
    TakePic take_pic = 3;
    TakePicAck take_pic_ack = 4;
    TakePicResp take_pic_resp = 5;
    
    ToggleFlash toggle_flash = 6;
    ToggleFlashResp toggle_flash_resp = 7;
    
    ToggleCamera toggle_camera = 8;
    ToggleCameraResp toggle_camera_resp = 9;
    
    SendFrame send_frame = 10;
    
    PeerBecameCamera peer_became_camera = 11;
    PeerBecameMonitor peer_became_monitor = 12;

}

message TakePic {
    bool success = 1;
    string error = 2;
}
message TakePicAck {
    bool success = 1;
    string error = 2;
}
message TakePicResp {
    bool success = 1;
    string error = 2;
    bytes pic = 3;
}

message ToggleFlash {
    bool success = 1;
    string error = 2;
}

message ToggleFlashResp {
    bool success = 1;
    string error = 2;
}

message ToggleCamera {
    bool success = 1;
    string error = 2;
}

message ToggleCameraResp {
    bool success = 1;
    string error = 2;
    RemoteShutterTypes.AVCaptureFlashMode flash_mode = 3;
    RemoteShutterTypes.AVCaptureDevicePosition cam_position = 4;
}

message SendFrame {
    bool success = 1;
    string error = 2;
    bytes data = 3;
    int64 fps = 4;
    RemoteShutterTypes.AVCaptureDevicePosition cam_position = 5;
}

message PeerBecameCamera {
    bool success = 1;
    string error = 2;
}
message PeerBecameMonitor {
    bool success = 1;
    string error = 2;
}
